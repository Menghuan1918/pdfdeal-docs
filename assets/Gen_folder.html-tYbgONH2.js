import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,a as d,b as i,d as t,e as s,f as l,r as c}from"./app-C-oB6oMQ.js";const p={},h={class:"hint-container warning"};function f(u,e){const o=c("RouteLink");return a(),n("div",null,[e[14]||(e[14]=d(`<p>Directory:</p><ul><li><a href="#gen-folder-list">Generate only a list of format-specific files in the specified directory</a></li><li><a href="#get-files">Combine with other functions to generate a list of format-specific files in the specified directory and leave the output file with its original file structure</a></li></ul><h2 id="gen-folder-list" tabindex="-1"><a class="header-anchor" href="#gen-folder-list"><span><code>gen_folder_list</code></span></a></h2><p>Generates a list of all files of the specified type in the folder.</p><h3 id="parameters" tabindex="-1"><a class="header-anchor" href="#parameters"><span>Parameters</span></a></h3><table><thead><tr><th>Parameter</th><th>Type</th><th>Default</th><th>Description</th></tr></thead><tbody><tr><td><code>path</code></td><td><code>str</code></td><td>Required</td><td>Path to folder to process</td></tr><tr><td><code>mode</code></td><td><code>str</code></td><td>mandatory</td><td>File types to look for, optional: <code>&#39;pdf&#39;</code>, <code>&#39;img&#39;</code>, <code>&#39;md&#39;</code></td></tr><tr><td><code>recursive</code></td><td><code>bool</code></td><td><code>False</code></td><td>Whether to recursively search subdirectories</td></tr></tbody></table><h3 id="exceptions" tabindex="-1"><a class="header-anchor" href="#exceptions"><span>Exceptions</span></a></h3><table><thead><tr><th>Exception</th><th>Description</th></tr></thead><tbody><tr><td><code>ValueError</code></td><td>if <code>mode</code> is not <code>&#39;pdf&#39;</code>, <code>&#39;img&#39;</code> or <code>&#39;md&#39;</code></td></tr></tbody></table><p>| Type | Description</p><table><thead><tr><th>type</th><th>description</th></tr></thead><tbody><tr><td><code>list</code></td><td>List of full paths to files</td></tr></tbody></table><h3 id="example-code" tabindex="-1"><a class="header-anchor" href="#example-code"><span>Example code</span></a></h3><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" data-title="python" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">files </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#61AFEF;"> gen_folder_list</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/path/to/folder&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;pdf&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">True</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">print</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(files)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="note" tabindex="-1"><a class="header-anchor" href="#note"><span>Note</span></a></h3><ul><li>This function filters files of the specified type according to the <code>mode</code> parameter.</li><li>If <code>recursive</code> is <code>True</code>, files in subdirectories are searched recursively.</li></ul><h2 id="get-files" tabindex="-1"><a class="header-anchor" href="#get-files"><span><code>get_files</code></span></a></h2><p>Generates a list of files in a folder, keeping the structure of the files the same before and after processing.</p><h3 id="parameters-1" tabindex="-1"><a class="header-anchor" href="#parameters-1"><span>Parameters</span></a></h3>`,17)),i("div",h,[e[13]||(e[13]=i("p",{class:"hint-container-title"},"Warning",-1)),i("p",null,[e[2]||(e[2]=t("Note that the ")),e[3]||(e[3]=i("code",null,"out",-1)),e[4]||(e[4]=t(" parameter ")),e[5]||(e[5]=i("strong",null,"must",-1)),e[6]||(e[6]=t(" be associated with a conversion function (e.g. ")),s(o,{to:"/guide/Doc2X/2.html"},{default:l(()=>e[0]||(e[0]=[t("Doc2X PDF conversion function")])),_:1}),e[7]||(e[7]=t("/")),s(o,{to:"/guide/Doc2X/1.html"},{default:l(()=>e[1]||(e[1]=[t("Doc2X image conversion function")])),_:1}),e[8]||(e[8]=t(") in ")),e[9]||(e[9]=i("code",null,"output_format",-1)),e[10]||(e[10]=t()),e[11]||(e[11]=i("strong",null,"consistent",-1)),e[12]||(e[12]=t("!"))])]),e[15]||(e[15]=d('<table><thead><tr><th>Parameters</th><th>Type</th><th>Default Value</th><th>Description</th></tr></thead><tbody><tr><td><code>path</code></td><td><code>str</code></td><td>Mandatory</td><td>Path to folder to process</td></tr><tr><td><code>mode</code></td><td><code>str</code></td><td>Required</td><td>File type to process, <code>pdf</code> or <code>img</code></td></tr><tr><td><code>out</code></td><td><code>str</code></td><td>Mandatory</td><td>Type of file to output, <code>&#39;md&#39;</code>, <code>&#39;md_dollar&#39;</code>, <code>&#39;latex&#39;</code>, <code>&#39;docx&#39;</code> or <code>&#39;pdf&#39;</code> (when used in a RAG)</td></tr></tbody></table><h3 id="return-value" tabindex="-1"><a class="header-anchor" href="#return-value"><span>Return value</span></a></h3><p>Returns a tuple <code>(list1, list2)</code> containing two lists:</p><ol><li><p><code>list1</code> (<code>list</code>): list of full paths</p><ul><li>Elements are full paths to files (strings).</li></ul></li><li><p><code>list2</code> (<code>list</code>): list of relative paths.</p><ul><li>The element is the relative path to the file (string).</li></ul></li></ol><h3 id="note-1" tabindex="-1"><a class="header-anchor" href="#note-1"><span>Note</span></a></h3><ul><li><code>list1</code> and <code>list2</code> are the same length.</li><li>For <code>input</code> and <code>output_format</code>, these path lists can be used</li></ul>',6))])}const y=r(p,[["render",f],["__file","Gen_folder.html.vue"]]),k=JSON.parse('{"path":"/guide/Tools/Gen_folder.html","title":"File Directory Acquisition Tool","lang":"en-US","frontmatter":{"title":"File Directory Acquisition Tool","icon":"folder-tree","description":"Directory: Generate only a list of format-specific files in the specified directory Combine with other functions to generate a list of format-specific files in the specified dir...","head":[["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://menghuan1918.github.io/pdfdeal-docs/pdfdeal-docs/zh/guide/Tools/Gen_folder.html"}],["meta",{"property":"og:url","content":"https://menghuan1918.github.io/pdfdeal-docs/pdfdeal-docs/guide/Tools/Gen_folder.html"}],["meta",{"property":"og:site_name","content":"pdfdeal"}],["meta",{"property":"og:title","content":"File Directory Acquisition Tool"}],["meta",{"property":"og:description","content":"Directory: Generate only a list of format-specific files in the specified directory Combine with other functions to generate a list of format-specific files in the specified dir..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-22T15:18:56.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-22T15:18:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"File Directory Acquisition Tool\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-22T15:18:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Menghuan1918\\",\\"url\\":\\"https://github.com/Menghuan1918\\"}]}"]]},"headers":[{"level":2,"title":"gen_folder_list","slug":"gen-folder-list","link":"#gen-folder-list","children":[{"level":3,"title":"Parameters","slug":"parameters","link":"#parameters","children":[]},{"level":3,"title":"Exceptions","slug":"exceptions","link":"#exceptions","children":[]},{"level":3,"title":"Example code","slug":"example-code","link":"#example-code","children":[]},{"level":3,"title":"Note","slug":"note","link":"#note","children":[]}]},{"level":2,"title":"get_files","slug":"get-files","link":"#get-files","children":[{"level":3,"title":"Parameters","slug":"parameters-1","link":"#parameters-1","children":[]},{"level":3,"title":"Return value","slug":"return-value","link":"#return-value","children":[]},{"level":3,"title":"Note","slug":"note-1","link":"#note-1","children":[]}]}],"git":{"createdTime":1724339936000,"updatedTime":1724339936000,"contributors":[{"name":"Menghuan","email":"Menghuan2003@outlook.com","commits":1}]},"readingTime":{"minutes":1.07,"words":322},"filePathRelative":"guide/Tools/Gen_folder.md","localizedDate":"August 22, 2024","autoDesc":true}');export{y as comp,k as data};
